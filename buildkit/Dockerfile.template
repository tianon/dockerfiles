{{ if env.variant != "" then .[env.variant] else . end | ( -}}
{{ # https://github.com/tianon/bashbrew/commit/823f2c4716e0c697a10a772e46a5d51c386a5dcc (bashbrew ~support for "--platform=$BUILDPLATFORM" specifically for this use case -- applied to Tianon's own local builds) -}}
FROM --platform=$BUILDPLATFORM golang:{{ .go.version }} AS build

{{ if env.variant == "dev" then ( -}}
# https://github.com/moby/buildkit/commits/HEAD
ARG BUILDKIT_COMMIT={{ .version }}
# https://github.com/moby/buildkit/tree/{{ .version }} -- {{ .date }} (@{{ .unix | tostring }})
ENV BUILDKIT_COMMIT $BUILDKIT_COMMIT
{{ ) else ( -}}
# https://github.com/moby/buildkit/releases
ENV BUILDKIT_VERSION {{ .version }}
{{ ) end -}}

COPY \
{{ def vsplit: split(".") | map(tonumber? // .) -}}
{{
	# TODO probably put more of this into an external "included" file so it can be used for things like verifying that I don't have any extra unnecessary patch files checked in, etc ğŸ˜… (would be easier to debug that way too)
	(.version | vsplit) as $vsplit
	| {
		# "after:" is inclusive ("added in" or "introduced")
		# "until:" is exclusive ("fixed in" or "applied upstream")
		# "older:" is "until:" but with an alternate patch

		# all patches should also adhere to Debian's DEP3 guidelines: https://dep-team.pages.debian.net/deps/dep3/

		"argsescaped.patch": { older: { "0.16": "argsescaped-0.13.patch" } },
		"backport-4727-index-mediaType.patch": { until: "0.14" },
		"backport-5072-fetch-tags.patch": { until: "0.15" },
		"backport-5096-fix-umask.patch": { until: "0.15" },
		"backport-5372-sbom-args.patch": { until: "0.17" },
		"backport-5441-fetch-by-commit.patch": { until: "0.17", older: { "0.16": "backport-5441-fetch-by-commit-0.13.patch" } },
		"backport-moby-48455-fix-riscv64-seccomp.patch": { until: "0.17" },
		"containerd-arm64-v8.patch": { older: { "0.19": "containerd-arm64-v8-pre-0.19.patch", "0.15": "containerd-arm64-v8-pre-0.15.patch" } },
		"git-no-submodules.patch": { older: { "0.24": "git-no-submodules-pre-0.24.patch", "0.21": "git-no-submodules-pre-0.21.patch" } },
		"mips64le.patch": { older: { "0.16": "mips64le-pre-0.16.patch" } },
		"noclip.patch": { },
		"nolint.patch": { after: "0.14" }, # linting was introduced in 0.14+ slash dockerfile/1.8.0

		# NOTE: 0.14 and 0.15 are not *actually* supported here, and will not build successfully with these patches, but the version numbers are included here because it's useful/interesting data
	}
	| to_entries
	| map(
		select(
			.value
			| if .until and $vsplit >= (.until | vsplit) then false else true end
			and if .after and $vsplit < (.after | vsplit) then false else true end
		)
		| .key as $patch
		| (.value.older // {})
		| to_entries
		| .[].key |= vsplit
		| sort_by(.key)
		| first(
			.[]
			| select($vsplit < .key)
			| .value
		) // $patch
		| (
-}}
	{{ . }} \
{{
		)
	) | add
-}}
	/tmp/buildkit-patches/

WORKDIR /app

RUN set -eux; \
{{ if env.variant == "dev" then ( -}}
	git init --quiet; \
	git config advice.detachedHead false; \
	git fetch --depth 1 'https://github.com/moby/buildkit.git' "$BUILDKIT_COMMIT:"; \
	git checkout FETCH_HEAD; \
{{ ) else ( -}}
	git clone --branch "v$BUILDKIT_VERSION" --depth 1 --config advice.detachedHead=false 'https://github.com/moby/buildkit.git' .; \
{{ ) end -}}
	for patch in /tmp/buildkit-patches/*.patch; do \
		git apply --verbose "$patch"; \
	done; \
	git diff --color

ENV CGO_ENABLED 0

ARG TARGETOS TARGETARCH TARGETVARIANT
ENV GOOS=$TARGETOS GOARCH=$TARGETARCH VARIANT=$TARGETVARIANT

RUN set -eux; \
	case "$GOARCH/$VARIANT" in \
		amd64/*) export GOAMD64="$VARIANT" ;; \
		arm/*) export GOARM="${VARIANT#v}" ;; \
		arm64/v8) ;; \
		*) [ -z "$VARIANT" ] ;; \
	esac; \
	go env | grep -E 'OS=|ARCH=|AMD64=|ARM64=|ARM='; \
	\
# https://github.com/moby/buildkit/blob/v0.13.2/Dockerfile#L93
	pkg='github.com/moby/buildkit'; \
	ldflags=" \
		-d -w \
{{ if env.variant == "dev" then ( -}}
		-X '$pkg/version.Version={{ env.variant }}-tianon' \
		-X '$pkg/version.Revision=$BUILDKIT_COMMIT+tianon-patches' \
{{ ) else ( -}}
		-X '$pkg/version.Version=$BUILDKIT_VERSION-tianon' \
		-X '$pkg/version.Revision=v$BUILDKIT_VERSION+tianon-patches' \
{{ ) end -}}
		-X '$pkg/version.Package=$pkg' \
	"; \
	go build -o /buildkitd -trimpath -ldflags "$ldflags" ./cmd/buildkitd; \
	go build -o /buildctl -trimpath -ldflags "$ldflags" ./cmd/buildctl; \
	\
# https://github.com/moby/buildkit/blob/v0.14.0/frontend/dockerfile/cmd/dockerfile-frontend/Dockerfile#L21
	pkg='github.com/moby/buildkit/frontend/dockerfile/cmd/dockerfile-frontend'; \
	ldflags=" \
		-d -w \
{{ if env.variant == "dev" then ( -}}
		-X '$pkg/version.Version={{ env.variant }}-tianon' \
		-X '$pkg/version.Revision=$BUILDKIT_COMMIT+tianon-patches' \
{{ ) else ( -}}
		-X '$pkg/version.Version=buildkit-$BUILDKIT_VERSION-tianon' \
		-X '$pkg/version.Revision=v$BUILDKIT_VERSION+tianon-patches' \
{{ ) end -}}
		-X '$pkg/version.Package=$pkg' \
	"; \
	go build -o /dockerfile-frontend -trimpath -ldflags "$ldflags" ./frontend/dockerfile/cmd/dockerfile-frontend

FROM --platform=$TARGETPLATFORM infosiftr/moby

RUN set -eux; \
	apt-get update; \
	apt-get install -y --no-install-recommends git; \
	if grep -q bookworm /etc/os-release; then \
		rm -rf /var/lib/apt/lists/*; \
	else \
		apt-get dist-clean; \
	fi

COPY --from=build --link /buildkitd /buildctl /dockerfile-frontend /usr/local/bin/
COPY buildkitd-entrypoint.sh /usr/local/bin/

VOLUME /var/lib/buildkit

# https://github.com/docker/buildx/issues/484#issuecomment-749352728
ENV BUILDKIT_STEP_LOG_MAX_SIZE -1
ENV BUILDKIT_STEP_LOG_MAX_SPEED -1

# https://github.com/moby/buildkit/blob/v0.14.0/frontend/gateway/gateway.go#L309
# https://github.com/moby/buildkit/blob/v0.14.0/frontend/dockerfile/cmd/dockerfile-frontend/Dockerfile#L35-L36
LABEL moby.buildkit.frontend.network.none="true"
LABEL moby.buildkit.frontend.caps="moby.buildkit.frontend.inputs,moby.buildkit.frontend.subrequests,moby.buildkit.frontend.contexts"

ENTRYPOINT ["buildkitd-entrypoint.sh"]
CMD []
{{ ) -}}
